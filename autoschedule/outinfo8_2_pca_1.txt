128*256*256
########################Schedule candidate########################
parallel
evaluation time: 0.0005883400
unroll
evaluation time: 0.0001365800
packing
evaluation time: 0.0001390050
write cache
evaluation time: 0.0001450200
#######################find best schedule#########################
Minimum Value: 0.0001365800
unroll
Numpy running time: 0.000593
speedup= 4.3382266805
##################################################################
best schedule method:  <function Gemm_tv2_reorder2_3_vec1_para1_unrollv1_config_define at 0x7f230ca0bd90>
ConfigSpace (len=648, space_map=
   0 tile_x: Split(policy=factors, product=128, num_outputs=2) len=8
   1 tile_y: Split(policy=factors, product=256, num_outputs=2) len=9
   2 tile_k: Split(policy=factors, product=256, num_outputs=2) len=9
)
XGBoost:
 Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/148) | 0.00 snext batch cost time: 0.0002338886260986328
measure batch cost time: 12.662431955337524
update cost time: 7.295608520507812e-05
 Current/Best:   23.91/  32.55 GFLOPS | Progress: (8/148) | 13.30 snext batch cost time: 0.00019121170043945312
measure batch cost time: 13.297880411148071
update cost time: 6.127357482910156e-05
 Current/Best:   23.27/  39.51 GFLOPS | Progress: (16/148) | 26.60 snext batch cost time: 0.00019931793212890625
measure batch cost time: 12.602962970733643
update cost time: 5.984306335449219e-05
 Current/Best:    7.49/  43.59 GFLOPS | Progress: (24/148) | 39.20 snext batch cost time: 0.00013756752014160156
measure batch cost time: 12.670563459396362
update cost time: 0.00014066696166992188
 Current/Best:   35.47/  43.59 GFLOPS | Progress: (32/148) | 51.87 snext batch cost time: 0.0002181529998779297
measure batch cost time: 13.005870580673218
update cost time: 6.604194641113281e-05
 Current/Best:    8.97/  64.79 GFLOPS | Progress: (40/148) | 64.88 snext batch cost time: 0.0001964569091796875
measure batch cost time: 12.803538084030151
update cost time: 5.745887756347656e-05
 Current/Best:   32.02/  64.79 GFLOPS | Progress: (48/148) | 77.69 snext batch cost time: 0.00017881393432617188
measure batch cost time: 4.947503089904785
update cost time: 6.747245788574219e-05
 Current/Best:   17.67/  64.79 GFLOPS | Progress: (56/148) | 82.64 snext batch cost time: 0.0001270771026611328
measure batch cost time: 13.219801664352417
fit cost time: 0.47679781913757324
sa while
find maxmums cost time: 3.684140682220459
2:maxmums: [166, 398, 373, 477, 262, 390, 334, 333, 389, 309, 478, 326, 382, 243, 238, 414, 397, 228, 244, 85, 327, 182, 255, 236, 302, 534, 445, 308, 270, 94, 462, 310, 303, 422, 300, 405, 86, 486, 341, 406, 158, 325, 230, 222, 229, 307, 342, 380, 388, 542, 461, 269, 446, 237, 245, 374, 371, 159, 294, 413, 372, 318, 92, 301]
update cost time: 4.161201238632202
 Current/Best:   16.82/  64.79 GFLOPS | Progress: (64/148) | 100.02 snext batch cost time: 9.417533874511719e-05
measure batch cost time: 12.889979124069214
update cost time: 7.414817810058594e-05
 Current/Best:   23.96/  64.79 GFLOPS | Progress: (72/148) | 112.91 snext batch cost time: 0.00013756752014160156
measure batch cost time: 12.741607189178467
update cost time: 0.0001366138458251953
 Current/Best:    8.74/  64.79 GFLOPS | Progress: (80/148) | 125.65 snext batch cost time: 0.0001571178436279297
measure batch cost time: 4.302466869354248
update cost time: 6.842613220214844e-05
 Current/Best:   41.16/  64.79 GFLOPS | Progress: (88/148) | 129.96 snext batch cost time: 0.00017714500427246094
measure batch cost time: 7.423262357711792
update cost time: 7.724761962890625e-05
 Current/Best:   17.88/  64.79 GFLOPS | Progress: (96/148) | 137.38 snext batch cost time: 0.00010061264038085938
measure batch cost time: 12.746232032775879
update cost time: 5.698204040527344e-05
 Current/Best:   39.41/  64.79 GFLOPS | Progress: (104/148) | 150.13 snext batch cost time: 0.00017452239990234375
measure batch cost time: 7.937985420227051
update cost time: 7.271766662597656e-05
 Current/Best:   41.23/  64.79 GFLOPS | Progress: (112/148) | 158.07 snext batch cost time: 8.797645568847656e-05
measure batch cost time: 12.780367851257324
update cost time: 6.651878356933594e-05
 Current/Best:   12.04/  64.79 GFLOPS | Progress: (120/148) | 170.85 snext batch cost time: 0.00021028518676757812
measure batch cost time: 13.081026792526245
fit cost time: 0.3205428123474121
sa while
find maxmums cost time: 2.671875
2:maxmums: [318, 330, 248, 340, 386, 385, 250, 241, 346, 400, 395, 329, 339, 399, 176, 407, 322, 412, 331, 337, 475, 266, 169, 458, 320, 268, 257, 404, 401, 384, 316, 275, 416, 347, 313, 402, 421, 251, 393, 419, 344, 249, 472, 396, 409, 335, 403, 332, 240, 263, 348, 420, 323, 349, 189, 315, 343, 267, 336, 392, 338, 476, 121, 324]
update cost time: 2.9926679134368896
 Current/Best:    3.93/  64.79 GFLOPS | Progress: (128/148) | 186.93 snext batch cost time: 9.5367431640625e-05
measure batch cost time: 7.664344549179077
update cost time: 7.557868957519531e-05
 Current/Best:   33.57/  64.79 GFLOPS | Progress: (136/148) | 194.60 snext batch cost time: 0.00010609626770019531
measure batch cost time: 12.730879306793213
update cost time: 8.654594421386719e-05
 Current/Best:   27.89/  64.79 GFLOPS | Progress: (144/148) | 207.33 snext batch cost time: 9.989738464355469e-05
measure batch cost time: 11.36489200592041
update cost time: 3.9577484130859375e-05
 Current/Best:    4.96/  64.79 GFLOPS | Progress: (148/148) | 218.70 s Done.
fea type: itervar
feature_cache type: <class 'tvm.autotvm.tuner.model_based_tuner.FeatureCache'>
feature cache context type: <class 'dict'>
feature_cache_context len: 648
feature_cache_context keys: dict_keys([497, 208, 444, 312, 8, 190, 471, 156, 224, 589, 258, 242, 201, 70, 155, 410, 254, 256, 507, 470, 305, 622, 630, 56, 197, 26, 210, 539, 104, 642, 381, 618, 18, 231, 299, 165, 469, 194, 615, 579, 314, 636, 48, 259, 509, 273, 491, 328, 290, 321, 167, 394, 29, 119, 191, 588, 553, 212, 110, 274, 306, 17, 61, 3, 517, 6, 7, 519, 522, 524, 525, 14, 529, 530, 532, 20, 534, 24, 536, 540, 30, 543, 541, 33, 544, 548, 37, 49, 566, 575, 576, 65, 69, 74, 75, 591, 82, 83, 594, 595, 97, 609, 613, 105, 625, 114, 626, 628, 121, 634, 122, 640, 132, 136, 137, 141, 146, 147, 162, 163, 174, 183, 189, 193, 198, 215, 218, 230, 248, 249, 255, 261, 263, 267, 270, 285, 286, 291, 296, 303, 308, 316, 317, 319, 322, 339, 340, 342, 345, 356, 378, 382, 385, 389, 391, 399, 401, 406, 411, 417, 419, 430, 435, 439, 442, 448, 453, 462, 472, 482, 483, 485, 487, 488, 490, 506, 508, 27, 157, 1, 0, 515, 90, 556, 520, 10, 505, 531, 380, 64, 552, 28, 542, 605, 22, 511, 325, 560, 550, 5, 50, 558, 572, 504, 425, 362, 87, 138, 635, 73, 612, 637, 330, 586, 130, 604, 644, 133, 209, 501, 170, 160, 171, 158, 39, 186, 262, 153, 414, 216, 250, 265, 257, 45, 287, 243, 268, 280, 282, 331, 440, 304, 357, 607, 338, 344, 323, 52, 318, 329, 332, 379, 386, 405, 397, 403, 627, 129, 421, 427, 436, 226, 376, 458, 461, 463, 496, 418, 281, 562, 220, 51, 2, 523, 526, 549, 15, 58, 388, 31, 518, 101, 151, 253, 41, 546, 260, 551, 581, 366, 293, 154, 610, 592, 113, 614, 118, 334, 580, 337, 643, 348, 67, 445, 72, 200, 179, 9, 422, 159, 219, 252, 207, 279, 459, 229, 278, 315, 152, 336, 371, 309, 311, 616, 412, 606, 373, 413, 409, 123, 502, 468, 503, 455, 573, 489, 433, 284, 181, 521, 477, 34, 367, 19, 244, 446, 295, 301, 184, 188, 535, 335, 363, 629, 364, 333, 225, 298, 11, 600, 611, 601, 326, 353, 578, 135, 99, 387, 187, 513, 408, 227, 486, 269, 247, 180, 547, 617, 246, 85, 347, 120, 368, 313, 310, 451, 450, 375, 429, 467, 646, 36, 473, 127, 103, 492, 494, 577, 292, 60, 117, 223, 602, 384, 25, 175, 621, 447, 42, 232, 302, 343, 202, 79, 149, 168, 567, 204, 271, 44, 241, 307, 584, 21, 327, 466, 437, 404, 195, 645, 452, 557, 464, 493, 182, 91, 166, 396, 533, 398, 144, 35, 554, 516, 597, 443, 234, 199, 89, 647, 102, 350, 510, 587, 43, 275, 68, 240, 596, 349, 355, 235, 402, 13, 420, 46, 400, 377, 638, 236, 480, 498, 632, 495, 441, 94, 454, 478, 66, 500, 109, 426, 62, 545, 164, 196, 108, 134, 213, 277, 476, 245, 300, 359, 172, 528, 432, 55, 139, 370, 564, 77, 320, 374, 81, 324, 424, 63, 86, 590, 484, 228, 351, 178, 341, 598, 456, 416, 143, 474, 177, 96, 538, 283, 53, 358, 192, 80, 221, 460, 276, 251, 407, 633, 239, 475, 16, 465, 392, 561, 593, 124, 585, 112, 623, 428, 59, 161, 583, 565, 569, 148, 222, 457, 173, 264, 12, 360, 107, 131, 514, 297, 372, 479, 266, 393, 40, 125, 559, 563, 620, 624, 631, 369, 95, 346, 619, 512, 238, 185, 54, 233, 395, 555, 32, 98, 438, 288, 481, 499, 206, 354, 145, 390, 84, 568, 365, 431, 169, 38, 4, 217, 294, 203, 603, 47, 126, 570, 537, 214, 571, 449, 88, 150, 237, 383, 574, 415, 106, 211, 352, 93, 78, 423, 527, 582, 100, 115, 111, 205, 639, 142, 361, 92, 434, 176, 76, 140, 272, 116, 289, 599, 608, 128, 23, 71, 641, 57])
task config space map: OrderedDict([('tile_x', Split(policy=factors, product=128, num_outputs=2) len=8), ('tile_y', Split(policy=factors, product=256, num_outputs=2) len=9), ('tile_k', Split(policy=factors, product=256, num_outputs=2) len=9)])
trails [318, 330, 248, 340, 386, 385, 250, 241, 346, 400, 395, 329, 339, 399, 176, 407, 322, 412, 331, 337, 475, 266, 169, 458, 320, 268, 257, 404, 401, 384, 316, 275, 416, 347, 313, 402, 421, 251, 393, 419, 344, 249, 472, 396, 409, 335, 403, 332, 240, 263, 348, 420, 323, 349, 189, 315, 343, 267, 336, 392, 338, 476, 121, 324]
plan size: 64
diversity_filter_ratio: None
space ConfigSpace (len=648, space_map=
   0 tile_x: Split(policy=factors, product=128, num_outputs=2) len=8
   1 tile_y: Split(policy=factors, product=256, num_outputs=2) len=9
   2 tile_k: Split(policy=factors, product=256, num_outputs=2) len=9
)
task: Task(func_name=Gemm_tv2_reorder2_3_vec1_para1_unrollv1_config_define, args=(256, 256, 128, 'float32'), kwargs={}, workload=None)
task config space: ConfigSpace (len=648, space_map=
   0 tile_x: Split(policy=factors, product=128, num_outputs=2) len=8
   1 tile_y: Split(policy=factors, product=256, num_outputs=2) len=9
   2 tile_k: Split(policy=factors, product=256, num_outputs=2) len=9
)
flops max: 64786901451.961685
best_iter 36
tuner param: {}
tuner dims: [8, 9, 9]
xs: [497, 208, 444, 312, 8, 190, 471, 156, 224, 589, 258, 242, 201, 70, 155, 410, 254, 256, 507, 470, 305, 622, 630, 56, 197, 26, 210, 539, 104, 642, 381, 618, 18, 231, 299, 165, 469, 194, 615, 579, 314, 636, 48, 259, 509, 273, 491, 328, 290, 321, 167, 394, 29, 119, 191, 588, 553, 212, 110, 274, 306, 17, 61, 3, 166, 398, 373, 477, 262, 390, 334, 333, 389, 309, 478, 326, 382, 243, 238, 414, 397, 228, 244, 85, 327, 182, 255, 236, 302, 534, 445, 308, 270, 94, 462, 310, 303, 422, 300, 405, 86, 486, 341, 406, 158, 325, 230, 222, 229, 307, 342, 380, 388, 542, 461, 269, 446, 237, 245, 374, 371, 159, 294, 413, 372, 456, 60, 49, 318, 330, 248, 340, 386, 385, 250, 241, 346, 400, 395, 329, 339, 399, 176, 407, 322, 412, 331, 337]
ys: [0.0, 9048906723.622751, 22503441800.574078, 32551835467.597984, 11827267856.639315, 7599615879.400627, 29574841348.18784, 23913475298.611702, 16488664373.464375, 17631645543.01448, 33065068979.10918, 39511129951.48603, 1927901525.1105454, 1077094776.9568756, 23268079440.807724, 0.0, 12918270296.907722, 28892360680.58139, 9621508040.281696, 43586241296.89286, 30641078277.386127, 0.0, 0.0, 7490497365.836235, 2089384712.331906, 15247024610.127594, 1525678575.8455372, 0.0, 21152372787.331684, 0.0, 35474301179.85368, 0.0, 16488016195.923502, 11322797829.54944, 27014710807.677444, 22854128865.27721, 64786901451.961685, 5541607266.721718, 0.0, 8967744970.173826, 44468871925.36047, 0.0, 9070334328.099995, 33191975626.162308, 9816518828.843588, 2021497457.6475408, 0.0, 32018809878.239624, 17158126406.21804, 36075379520.92203, 12358724733.337261, 52818335222.2642, 5863699147.21096, 8520332337.944623, 13668683906.079418, 17666550133.732075, 0.0, 1552126618.3003707, 6124546788.64252, 1908748936.2476735, 31788275417.787712, 14273865473.293743, 1113881478.7470937, 16815218393.569468, 5813351443.876949, 35758591585.31906, 15664415894.83119, 0.0, 14401538250.24035, 27659614877.34107, 25959670730.952526, 23963343426.84111, 43100282587.47367, 27768572279.784172, 0.0, 24541727860.507298, 19650974512.74363, 42879967285.18121, 8740773775.411322, 0.0, 50778498789.346245, 20147487750.984726, 43280404499.019714, 15042513359.394613, 25347055446.442062, 6054396119.924361, 20555275667.728497, 41163001128.612785, 12084545349.775269, 33570545862.01377, 18359833661.632744, 42566641294.97133, 3023673634.1648917, 3509466673.3604436, 31303112172.550186, 17881582537.51705, 9255271635.994528, 0.0, 28627130327.95277, 43267010521.97235, 4237162902.7614317, 0.0, 2553361012.017094, 39407187485.31968, 6961615960.430879, 30632127076.866898, 8050023990.94102, 26748534804.37486, 22419242590.266457, 40505108643.16756, 2897339117.460142, 41231791594.98649, 61016933372.12686, 0.0, 51065976745.60175, 2613306084.8110256, 12571346361.347559, 27696143687.268887, 26738303636.88522, 12036687137.691557, 19700354618.25697, 11095308511.34184, 7778176693.123654, 0.0, 22203245017.336754, 31292602678.404896, 1095526142.2330763, 3925854096.856923, 26729783640.82465, 42366707070.70708, 30203096421.11327, 4428084733.505419, 47532910244.78695, 35867145544.72379, 38351428702.05276, 33569202449.077595, 0.0, 28868497487.78305, 62050506694.28212, 31754582276.564335, 4753991408.525735, 29036372447.213566, 26168604941.35263, 27885805465.062164, 46889927333.70598, 0.0, 47079402851.0495, 4963673372.781065]
x_train: [[-10.877231    18.070145    10.298374   ...   0.44824943   1.058012
   -0.30097055]
 [  0.30622765  22.409502    -0.4300747  ...  -0.08511207  -1.9278255
    1.2455523 ]
 [  7.222582    -5.662072     8.768466   ...  -1.7953517    1.4017735
   -0.2997265 ]
 ...
 [ 11.174555    11.694839    12.773118   ...  -0.5862671    0.6552361
    1.2835712 ]
 [ -7.4690204    9.6290245  -14.702436   ...   1.2855252    3.3045251
   -0.5463998 ]
 [  6.6466055   17.350386    -9.423288   ...   0.96288955   3.124515
   -0.5193791 ]]
x_train shape: (128, 9)
y_train: [0.         0.13967186 0.34734555 0.5024447  0.18255647 0.11730173
 0.45649415 0.36910972 0.25450614 0.27214831 0.51036657 0.60986294
 0.02975758 0.01662519 0.3591479  0.         0.19939633 0.44595991
 0.14851008 0.67276317 0.47295175 0.         0.         0.11561747
 0.03225011 0.23534116 0.02354918 0.         0.3264915  0.
 0.5475536  0.         0.25449614 0.17476986 0.41697797 0.35275848
 1.         0.08553592 0.         0.13841911 0.68638677 0.
 0.1400026  0.51232541 0.15152012 0.03120226 0.         0.49421734
 0.26483944 0.55683138 0.19075962 0.81526256 0.09050748 0.13151319
 0.21097913 0.27268707 0.         0.02395741 0.09453372 0.02946196
 0.49065899 0.22032024 0.017193   0.25954658 0.08973035 0.55194169
 0.24178369 0.         0.22229089 0.42693221 0.4006932  0.36987945
 0.66526229 0.42861399 0.         0.37880694 0.30331709 0.66186168
 0.13491576 0.         0.78377724 0.31098088 0.66804251 0.23218449
 0.39123735 0.09345093 0.31727518 0.63535993 0.1865276  0.51816872
 0.28338805 0.65702542 0.04667106 0.05416939 0.48317039 0.27600614
 0.14285714 0.         0.44186602 0.66783577 0.06540154 0.
 0.03941169 0.60825856 0.10745407 0.47281358 0.12425388 0.41286949
 0.34604591 0.62520521 0.04472106 0.63642173 0.94180972 0.
 0.78821452 0.04033695 0.19404148 0.42749604 0.41271157 0.1857889
 0.30407928 0.17125851 0.12005786 0.         0.34271195 0.48300817
 0.01690969 0.06059642]
y_train shape: (128,)
feas: [[ -6.8539233    0.45480394  -1.4032586  ...  -0.27484116   0.10742319
   -0.12452431]
 [ -2.9323397   -8.727839     7.1822367  ...   1.747183    -0.8834813
   -0.41058365]
 [ -3.64898      9.533148    -3.9791684  ...  -1.8518071    0.14554924
    0.15144145]
 ...
 [ 14.900636    13.240158    -0.46350452 ...  -2.7650027   -0.6188774
   -0.48620644]
 [  2.1332881  -10.167808    -0.20885229 ...   0.6045084    0.21587844
   -0.6288318 ]
 [ -3.1067135    3.811795    -2.723619   ...  -1.053522     0.1611305
   -0.16865216]]
feas shape: (128, 9)
predict count: 1002
space get(index = 64) [('tile_x', [-1, 1]), ('tile_y', [-1, 256]), ('tile_k', [-1, 1])],,None,64
myTuner rets: [[[('tile_x', [-1, 2]), ('tile_y', [-1, 256]), ('tile_k', [-1, 64])],,None,497, [('tile_x', [-1, 1]), ('tile_y', [-1, 256]), ('tile_k', [-1, 4])],,None,208, [('tile_x', [-1, 16]), ('tile_y', [-1, 2]), ('tile_k', [-1, 64])],,None,444, [('tile_x', [-1, 1]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,312, [('tile_x', [-1, 1]), ('tile_y', [-1, 2]), ('tile_k', [-1, 1])],,None,8, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 4])],,None,190, [('tile_x', [-1, 128]), ('tile_y', [-1, 16]), ('tile_k', [-1, 64])],,None,471, [('tile_x', [-1, 16]), ('tile_y', [-1, 2]), ('tile_k', [-1, 4])],,None,156], [[('tile_x', [-1, 1]), ('tile_y', [-1, 2]), ('tile_k', [-1, 8])],,None,224, [('tile_x', [-1, 32]), ('tile_y', [-1, 2]), ('tile_k', [-1, 256])],,None,589, [('tile_x', [-1, 4]), ('tile_y', [-1, 32]), ('tile_k', [-1, 8])],,None,258, [('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,242, [('tile_x', [-1, 2]), ('tile_y', [-1, 128]), ('tile_k', [-1, 4])],,None,201, [('tile_x', [-1, 64]), ('tile_y', [-1, 256]), ('tile_k', [-1, 1])],,None,70, [('tile_x', [-1, 8]), ('tile_y', [-1, 2]), ('tile_k', [-1, 4])],,None,155, [('tile_x', [-1, 4]), ('tile_y', [-1, 64]), ('tile_k', [-1, 32])],,None,410], [[('tile_x', [-1, 64]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,254, [('tile_x', [-1, 1]), ('tile_y', [-1, 32]), ('tile_k', [-1, 8])],,None,256, [('tile_x', [-1, 8]), ('tile_y', [-1, 1]), ('tile_k', [-1, 128])],,None,507, [('tile_x', [-1, 64]), ('tile_y', [-1, 16]), ('tile_k', [-1, 64])],,None,470, [('tile_x', [-1, 2]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,305, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 256])],,None,622, [('tile_x', [-1, 64]), ('tile_y', [-1, 64]), ('tile_k', [-1, 256])],,None,630, [('tile_x', [-1, 1]), ('tile_y', [-1, 128]), ('tile_k', [-1, 1])],,None,56], [[('tile_x', [-1, 32]), ('tile_y', [-1, 64]), ('tile_k', [-1, 4])],,None,197, [('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 1])],,None,26, [('tile_x', [-1, 4]), ('tile_y', [-1, 256]), ('tile_k', [-1, 4])],,None,210, [('tile_x', [-1, 8]), ('tile_y', [-1, 16]), ('tile_k', [-1, 128])],,None,539, [('tile_x', [-1, 1]), ('tile_y', [-1, 16]), ('tile_k', [-1, 2])],,None,104, [('tile_x', [-1, 4]), ('tile_y', [-1, 256]), ('tile_k', [-1, 256])],,None,642, [('tile_x', [-1, 32]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,381, [('tile_x', [-1, 4]), ('tile_y', [-1, 32]), ('tile_k', [-1, 256])],,None,618], [[('tile_x', [-1, 4]), ('tile_y', [-1, 4]), ('tile_k', [-1, 1])],,None,18, [('tile_x', [-1, 128]), ('tile_y', [-1, 2]), ('tile_k', [-1, 8])],,None,231, [('tile_x', [-1, 8]), ('tile_y', [-1, 2]), ('tile_k', [-1, 16])],,None,299, [('tile_x', [-1, 32]), ('tile_y', [-1, 4]), ('tile_k', [-1, 4])],,None,165, [('tile_x', [-1, 32]), ('tile_y', [-1, 16]), ('tile_k', [-1, 64])],,None,469, [('tile_x', [-1, 4]), ('tile_y', [-1, 64]), ('tile_k', [-1, 4])],,None,194, [('tile_x', [-1, 128]), ('tile_y', [-1, 16]), ('tile_k', [-1, 256])],,None,615, [('tile_x', [-1, 8]), ('tile_y', [-1, 1]), ('tile_k', [-1, 256])],,None,579], [[('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,314, [('tile_x', [-1, 16]), ('tile_y', [-1, 128]), ('tile_k', [-1, 256])],,None,636, [('tile_x', [-1, 1]), ('tile_y', [-1, 64]), ('tile_k', [-1, 1])],,None,48, [('tile_x', [-1, 8]), ('tile_y', [-1, 32]), ('tile_k', [-1, 8])],,None,259, [('tile_x', [-1, 32]), ('tile_y', [-1, 1]), ('tile_k', [-1, 128])],,None,509, [('tile_x', [-1, 2]), ('tile_y', [-1, 128]), ('tile_k', [-1, 8])],,None,273, [('tile_x', [-1, 8]), ('tile_y', [-1, 128]), ('tile_k', [-1, 64])],,None,491, [('tile_x', [-1, 1]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,328], [[('tile_x', [-1, 4]), ('tile_y', [-1, 1]), ('tile_k', [-1, 16])],,None,290, [('tile_x', [-1, 2]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,321, [('tile_x', [-1, 128]), ('tile_y', [-1, 4]), ('tile_k', [-1, 4])],,None,167, [('tile_x', [-1, 4]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,394, [('tile_x', [-1, 32]), ('tile_y', [-1, 8]), ('tile_k', [-1, 1])],,None,29, [('tile_x', [-1, 128]), ('tile_y', [-1, 32]), ('tile_k', [-1, 2])],,None,119, [('tile_x', [-1, 128]), ('tile_y', [-1, 32]), ('tile_k', [-1, 4])],,None,191, [('tile_x', [-1, 16]), ('tile_y', [-1, 2]), ('tile_k', [-1, 256])],,None,588], [[('tile_x', [-1, 2]), ('tile_y', [-1, 64]), ('tile_k', [-1, 128])],,None,553, [('tile_x', [-1, 16]), ('tile_y', [-1, 256]), ('tile_k', [-1, 4])],,None,212, [('tile_x', [-1, 64]), ('tile_y', [-1, 16]), ('tile_k', [-1, 2])],,None,110, [('tile_x', [-1, 4]), ('tile_y', [-1, 128]), ('tile_k', [-1, 8])],,None,274, [('tile_x', [-1, 4]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,306, [('tile_x', [-1, 2]), ('tile_y', [-1, 4]), ('tile_k', [-1, 1])],,None,17, [('tile_x', [-1, 32]), ('tile_y', [-1, 128]), ('tile_k', [-1, 1])],,None,61, [('tile_x', [-1, 8]), ('tile_y', [-1, 1]), ('tile_k', [-1, 1])],,None,3], [[('tile_x', [-1, 64]), ('tile_y', [-1, 4]), ('tile_k', [-1, 4])],,None,166, [('tile_x', [-1, 64]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,398, [('tile_x', [-1, 32]), ('tile_y', [-1, 2]), ('tile_k', [-1, 32])],,None,373, [('tile_x', [-1, 32]), ('tile_y', [-1, 32]), ('tile_k', [-1, 64])],,None,477, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 8])],,None,262, [('tile_x', [-1, 64]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,390, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,334, [('tile_x', [-1, 32]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,333], [[('tile_x', [-1, 32]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,389, [('tile_x', [-1, 32]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,309, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 64])],,None,478, [('tile_x', [-1, 64]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,326, [('tile_x', [-1, 64]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,382, [('tile_x', [-1, 8]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,243, [('tile_x', [-1, 64]), ('tile_y', [-1, 4]), ('tile_k', [-1, 8])],,None,238, [('tile_x', [-1, 64]), ('tile_y', [-1, 64]), ('tile_k', [-1, 32])],,None,414], [[('tile_x', [-1, 32]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,397, [('tile_x', [-1, 16]), ('tile_y', [-1, 2]), ('tile_k', [-1, 8])],,None,228, [('tile_x', [-1, 16]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,244, [('tile_x', [-1, 32]), ('tile_y', [-1, 2]), ('tile_k', [-1, 2])],,None,85, [('tile_x', [-1, 128]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,327, [('tile_x', [-1, 64]), ('tile_y', [-1, 16]), ('tile_k', [-1, 4])],,None,182, [('tile_x', [-1, 128]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,255, [('tile_x', [-1, 16]), ('tile_y', [-1, 4]), ('tile_k', [-1, 8])],,None,236], [[('tile_x', [-1, 64]), ('tile_y', [-1, 2]), ('tile_k', [-1, 16])],,None,302, [('tile_x', [-1, 64]), ('tile_y', [-1, 8]), ('tile_k', [-1, 128])],,None,534, [('tile_x', [-1, 32]), ('tile_y', [-1, 2]), ('tile_k', [-1, 64])],,None,445, [('tile_x', [-1, 16]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,308, [('tile_x', [-1, 64]), ('tile_y', [-1, 64]), ('tile_k', [-1, 8])],,None,270, [('tile_x', [-1, 64]), ('tile_y', [-1, 4]), ('tile_k', [-1, 2])],,None,94, [('tile_x', [-1, 64]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,462, [('tile_x', [-1, 64]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,310], [[('tile_x', [-1, 128]), ('tile_y', [-1, 2]), ('tile_k', [-1, 16])],,None,303, [('tile_x', [-1, 64]), ('tile_y', [-1, 128]), ('tile_k', [-1, 32])],,None,422, [('tile_x', [-1, 16]), ('tile_y', [-1, 2]), ('tile_k', [-1, 16])],,None,300, [('tile_x', [-1, 32]), ('tile_y', [-1, 32]), ('tile_k', [-1, 32])],,None,405, [('tile_x', [-1, 64]), ('tile_y', [-1, 2]), ('tile_k', [-1, 2])],,None,86, [('tile_x', [-1, 64]), ('tile_y', [-1, 64]), ('tile_k', [-1, 64])],,None,486, [('tile_x', [-1, 32]), ('tile_y', [-1, 64]), ('tile_k', [-1, 16])],,None,341, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 32])],,None,406], [[('tile_x', [-1, 64]), ('tile_y', [-1, 2]), ('tile_k', [-1, 4])],,None,158, [('tile_x', [-1, 32]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,325, [('tile_x', [-1, 64]), ('tile_y', [-1, 2]), ('tile_k', [-1, 8])],,None,230, [('tile_x', [-1, 64]), ('tile_y', [-1, 1]), ('tile_k', [-1, 8])],,None,222, [('tile_x', [-1, 32]), ('tile_y', [-1, 2]), ('tile_k', [-1, 8])],,None,229, [('tile_x', [-1, 8]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,307, [('tile_x', [-1, 64]), ('tile_y', [-1, 64]), ('tile_k', [-1, 16])],,None,342, [('tile_x', [-1, 16]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,380], [[('tile_x', [-1, 16]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,388, [('tile_x', [-1, 64]), ('tile_y', [-1, 16]), ('tile_k', [-1, 128])],,None,542, [('tile_x', [-1, 32]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,461, [('tile_x', [-1, 32]), ('tile_y', [-1, 64]), ('tile_k', [-1, 8])],,None,269, [('tile_x', [-1, 64]), ('tile_y', [-1, 2]), ('tile_k', [-1, 64])],,None,446, [('tile_x', [-1, 32]), ('tile_y', [-1, 4]), ('tile_k', [-1, 8])],,None,237, [('tile_x', [-1, 32]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,245, [('tile_x', [-1, 64]), ('tile_y', [-1, 2]), ('tile_k', [-1, 32])],,None,374], [[('tile_x', [-1, 8]), ('tile_y', [-1, 2]), ('tile_k', [-1, 32])],,None,371, [('tile_x', [-1, 128]), ('tile_y', [-1, 2]), ('tile_k', [-1, 4])],,None,159, [('tile_x', [-1, 64]), ('tile_y', [-1, 1]), ('tile_k', [-1, 16])],,None,294, [('tile_x', [-1, 32]), ('tile_y', [-1, 64]), ('tile_k', [-1, 32])],,None,413, [('tile_x', [-1, 16]), ('tile_y', [-1, 2]), ('tile_k', [-1, 32])],,None,372, [('tile_x', [-1, 1]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,456, [('tile_x', [-1, 16]), ('tile_y', [-1, 128]), ('tile_k', [-1, 1])],,None,60, [('tile_x', [-1, 2]), ('tile_y', [-1, 64]), ('tile_k', [-1, 1])],,None,49], [[('tile_x', [-1, 64]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,318, [('tile_x', [-1, 4]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,330, [('tile_x', [-1, 1]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,248, [('tile_x', [-1, 16]), ('tile_y', [-1, 64]), ('tile_k', [-1, 16])],,None,340, [('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,386, [('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,385, [('tile_x', [-1, 4]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,250, [('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,241], [[('tile_x', [-1, 4]), ('tile_y', [-1, 128]), ('tile_k', [-1, 16])],,None,346, [('tile_x', [-1, 1]), ('tile_y', [-1, 32]), ('tile_k', [-1, 32])],,None,400, [('tile_x', [-1, 8]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,395, [('tile_x', [-1, 2]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,329, [('tile_x', [-1, 8]), ('tile_y', [-1, 64]), ('tile_k', [-1, 16])],,None,339, [('tile_x', [-1, 128]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,399, [('tile_x', [-1, 1]), ('tile_y', [-1, 16]), ('tile_k', [-1, 4])],,None,176, [('tile_x', [-1, 128]), ('tile_y', [-1, 32]), ('tile_k', [-1, 32])],,None,407], [[('tile_x', [-1, 4]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,322, [('tile_x', [-1, 16]), ('tile_y', [-1, 64]), ('tile_k', [-1, 32])],,None,412, [('tile_x', [-1, 8]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,331, [('tile_x', [-1, 2]), ('tile_y', [-1, 64]), ('tile_k', [-1, 16])],,None,337]]
predict count: 1002
fit count: 2
find maximums count: 2
