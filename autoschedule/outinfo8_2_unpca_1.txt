128*256*256
########################Schedule candidate########################
parallel
evaluation time: 0.0005195750
unroll
evaluation time: 0.0001346950
packing
evaluation time: 0.0001671900
write cache
evaluation time: 0.0001457750
#######################find best schedule#########################
Minimum Value: 0.0001346950
unroll
Numpy running time: 0.003570
speedup= 26.5062697194
##################################################################
best schedule method:  <function Gemm_tv2_reorder2_3_vec1_para1_unrollv1_config_define at 0x7f692e748e18>
ConfigSpace (len=648, space_map=
   0 tile_x: Split(policy=factors, product=128, num_outputs=2) len=8
   1 tile_y: Split(policy=factors, product=256, num_outputs=2) len=9
   2 tile_k: Split(policy=factors, product=256, num_outputs=2) len=9
)
XGBoost:
 Current/Best:    0.00/   0.00 GFLOPS | Progress: (0/148) | 0.00 snext batch cost time: 0.0002014636993408203
measure batch cost time: 12.092689514160156
update cost time: 3.9577484130859375e-05
 Current/Best:   12.21/  15.85 GFLOPS | Progress: (8/148) | 12.72 snext batch cost time: 0.00020694732666015625
measure batch cost time: 12.815807342529297
update cost time: 5.340576171875e-05
 Current/Best:    1.19/  31.90 GFLOPS | Progress: (16/148) | 25.53 snext batch cost time: 0.0001220703125
measure batch cost time: 12.701829195022583
update cost time: 5.316734313964844e-05
 Current/Best:   21.87/  61.24 GFLOPS | Progress: (24/148) | 38.24 snext batch cost time: 0.0001537799835205078
measure batch cost time: 12.555354356765747
update cost time: 5.1021575927734375e-05
 Current/Best:    9.82/  61.24 GFLOPS | Progress: (32/148) | 50.80 snext batch cost time: 0.00017523765563964844
measure batch cost time: 5.219716310501099
update cost time: 6.341934204101562e-05
 Current/Best:   16.33/  61.24 GFLOPS | Progress: (40/148) | 56.02 snext batch cost time: 0.00020837783813476562
measure batch cost time: 12.738078594207764
update cost time: 5.435943603515625e-05
 Current/Best:   64.90/  64.90 GFLOPS | Progress: (48/148) | 68.76 snext batch cost time: 0.00017786026000976562
measure batch cost time: 12.637275457382202
update cost time: 4.887580871582031e-05
 Current/Best:   13.12/  64.90 GFLOPS | Progress: (56/148) | 81.40 snext batch cost time: 0.0001239776611328125
measure batch cost time: 8.516180276870728
fit cost time: 0.3515636920928955
sa while
find maxmums cost time: 1.571549892425537
2:maxmums: [395, 392, 323, 320, 387, 394, 460, 384, 381, 325, 248, 321, 380, 324, 251, 385, 393, 322, 376, 318, 317, 313, 312, 250, 386, 453, 382, 464, 402, 400, 315, 249, 309, 378, 459, 379, 244, 466, 256, 446, 252, 456, 457, 329, 401, 258, 332, 253, 314, 377, 454, 179, 452, 172, 465, 169, 241, 237, 390, 531, 461, 302, 448, 254]
update cost time: 1.9233970642089844
 Current/Best:   26.73/  64.90 GFLOPS | Progress: (64/148) | 91.84 snext batch cost time: 9.059906005859375e-05
measure batch cost time: 4.561980962753296
update cost time: 6.794929504394531e-05
 Current/Best:   28.84/  64.90 GFLOPS | Progress: (72/148) | 96.40 snext batch cost time: 0.0001533031463623047
measure batch cost time: 3.7008135318756104
update cost time: 7.271766662597656e-05
 Current/Best:   35.64/  64.90 GFLOPS | Progress: (80/148) | 100.10 snext batch cost time: 0.00015616416931152344
measure batch cost time: 4.012017488479614
update cost time: 6.556510925292969e-05
 Current/Best:   38.25/  64.90 GFLOPS | Progress: (88/148) | 104.12 snext batch cost time: 0.00018548965454101562
measure batch cost time: 6.561872959136963
update cost time: 6.914138793945312e-05
 Current/Best:   31.39/  64.90 GFLOPS | Progress: (96/148) | 110.68 snext batch cost time: 0.000118255615234375
measure batch cost time: 6.2921435832977295
update cost time: 6.794929504394531e-05
 Current/Best:   12.25/  64.90 GFLOPS | Progress: (104/148) | 116.98 snext batch cost time: 0.00010061264038085938
measure batch cost time: 6.177064418792725
update cost time: 8.082389831542969e-05
 Current/Best:   19.23/  64.90 GFLOPS | Progress: (112/148) | 123.16 snext batch cost time: 0.00018453598022460938
measure batch cost time: 6.163519620895386
update cost time: 6.67572021484375e-05
 Current/Best:   18.51/  64.90 GFLOPS | Progress: (120/148) | 129.32 snext batch cost time: 0.0001430511474609375
measure batch cost time: 6.6886537075042725
fit cost time: 0.4327409267425537
sa while
find maxmums cost time: 0.2540767192840576
2:maxmums: [458, 451, 530, 331, 243, 523, 532, 468, 242, 245, 259, 307, 522, 529, 444, 308, 443, 236, 235, 450, 515, 533, 171, 594, 372, 587, 170, 516, 371, 397, 164, 593, 306, 300, 260, 228, 178, 100, 528, 266, 173, 234, 180, 338, 299, 445, 99, 373, 364, 247, 525, 469, 184, 514, 337, 101, 177, 227, 521, 448, 246, 520, 442, 596]
update cost time: 0.6870121955871582
 Current/Best:   30.43/  64.90 GFLOPS | Progress: (128/148) | 136.70 snext batch cost time: 8.893013000488281e-05
measure batch cost time: 7.265215158462524
update cost time: 7.2479248046875e-05
 Current/Best:   73.42/  73.42 GFLOPS | Progress: (136/148) | 143.97 snext batch cost time: 0.0001392364501953125
measure batch cost time: 6.494794845581055
update cost time: 7.557868957519531e-05
 Current/Best:   43.86/  73.42 GFLOPS | Progress: (144/148) | 150.46 snext batch cost time: 8.463859558105469e-05
measure batch cost time: 2.274082660675049
update cost time: 4.4345855712890625e-05
 Current/Best:   34.30/  73.42 GFLOPS | Progress: (148/148) | 152.74 s Done.
fea type: itervar
feature_cache type: <class 'tvm.autotvm.tuner.model_based_tuner.FeatureCache'>
feature cache context type: <class 'dict'>
feature_cache_context len: 636
feature_cache_context keys: dict_keys([421, 478, 85, 476, 414, 70, 430, 361, 449, 462, 343, 550, 415, 115, 17, 65, 257, 557, 157, 388, 183, 50, 319, 480, 617, 193, 622, 341, 84, 408, 362, 509, 328, 95, 153, 200, 31, 311, 205, 224, 119, 473, 340, 595, 524, 434, 396, 467, 97, 517, 418, 389, 425, 403, 129, 439, 185, 239, 45, 316, 330, 438, 279, 176, 3, 6, 7, 519, 522, 525, 14, 529, 530, 532, 20, 534, 24, 536, 26, 540, 29, 30, 543, 541, 33, 544, 548, 37, 49, 566, 575, 576, 579, 69, 74, 75, 591, 82, 83, 594, 609, 613, 105, 625, 114, 626, 628, 121, 634, 122, 636, 640, 132, 136, 137, 141, 146, 147, 162, 163, 174, 189, 190, 191, 198, 215, 218, 230, 248, 249, 254, 255, 258, 259, 261, 263, 267, 270, 285, 286, 291, 296, 299, 303, 306, 308, 317, 322, 339, 342, 345, 356, 378, 381, 382, 385, 391, 399, 401, 406, 411, 417, 419, 435, 442, 448, 453, 472, 482, 483, 485, 487, 488, 490, 497, 506, 508, 1, 62, 583, 90, 516, 13, 457, 170, 528, 164, 8, 520, 2, 539, 245, 46, 35, 549, 545, 109, 564, 573, 581, 209, 643, 98, 76, 586, 107, 89, 615, 81, 338, 629, 409, 638, 120, 645, 276, 143, 139, 203, 160, 523, 169, 117, 182, 199, 208, 518, 250, 225, 238, 42, 275, 253, 265, 126, 262, 363, 152, 11, 298, 314, 349, 607, 352, 336, 332, 486, 347, 355, 402, 373, 376, 390, 39, 427, 423, 440, 477, 123, 503, 274, 500, 505, 504, 57, 445, 54, 151, 527, 130, 489, 458, 167, 535, 512, 526, 18, 538, 246, 397, 38, 552, 561, 106, 197, 201, 577, 72, 10, 77, 195, 102, 611, 614, 321, 624, 331, 631, 560, 140, 64, 173, 59, 172, 471, 470, 214, 302, 547, 229, 127, 71, 364, 297, 301, 15, 304, 318, 463, 329, 309, 88, 386, 413, 175, 404, 367, 422, 514, 446, 450, 451, 447, 128, 282, 496, 510, 432, 5, 493, 149, 455, 313, 570, 16, 393, 360, 67, 161, 44, 627, 87, 154, 323, 394, 379, 630, 327, 632, 266, 563, 142, 47, 206, 125, 553, 178, 278, 295, 256, 41, 307, 606, 533, 324, 335, 554, 289, 353, 377, 384, 312, 260, 223, 437, 158, 452, 99, 474, 159, 56, 456, 78, 365, 441, 148, 93, 25, 590, 507, 459, 32, 366, 80, 79, 610, 91, 177, 612, 600, 264, 574, 68, 601, 180, 271, 469, 293, 565, 273, 315, 326, 333, 546, 371, 398, 155, 241, 221, 597, 444, 498, 40, 240, 542, 374, 156, 599, 642, 596, 465, 348, 392, 334, 219, 48, 231, 292, 466, 468, 325, 410, 232, 502, 108, 568, 111, 179, 188, 204, 226, 171, 358, 320, 344, 288, 605, 217, 433, 375, 593, 603, 113, 479, 272, 368, 300, 94, 592, 310, 133, 620, 192, 436, 36, 280, 207, 166, 202, 168, 184, 481, 61, 222, 227, 387, 281, 618, 58, 492, 460, 236, 305, 521, 464, 237, 578, 145, 187, 537, 294, 337, 112, 96, 383, 12, 28, 92, 598, 4, 86, 346, 350, 243, 242, 251, 407, 194, 461, 55, 380, 233, 9, 144, 357, 269, 210, 562, 395, 429, 608, 582, 235, 531, 369, 426, 372, 73, 619, 604, 431, 244, 454, 416, 584, 234, 252, 589, 104, 165, 405, 19, 22, 101, 359, 228, 602, 211, 21, 138, 400, 420, 186, 555, 484, 428, 100, 515, 27, 370, 181, 412, 588, 213, 150, 135, 103, 443, 268, 513, 247, 43, 284, 558, 277, 134, 290, 212, 475, 116, 424, 587, 354, 494, 216, 220, 623, 110, 196, 34, 571, 283, 556, 616, 511, 491, 0, 569, 118, 633, 501, 66, 621, 499, 53, 567, 124, 131, 585, 351, 23, 495, 635, 641, 580, 572])
task config space map: OrderedDict([('tile_x', Split(policy=factors, product=128, num_outputs=2) len=8), ('tile_y', Split(policy=factors, product=256, num_outputs=2) len=9), ('tile_k', Split(policy=factors, product=256, num_outputs=2) len=9)])
trails [458, 451, 530, 331, 243, 523, 532, 468, 242, 245, 259, 307, 522, 529, 444, 308, 443, 236, 235, 450, 515, 533, 171, 594, 372, 587, 170, 516, 371, 397, 164, 593, 306, 300, 260, 228, 178, 100, 528, 266, 173, 234, 180, 338, 299, 445, 99, 373, 364, 247, 525, 469, 184, 514, 337, 101, 177, 227, 521, 448, 246, 520, 442, 596]
plan size: 64
diversity_filter_ratio: None
space ConfigSpace (len=648, space_map=
   0 tile_x: Split(policy=factors, product=128, num_outputs=2) len=8
   1 tile_y: Split(policy=factors, product=256, num_outputs=2) len=9
   2 tile_k: Split(policy=factors, product=256, num_outputs=2) len=9
)
task: Task(func_name=Gemm_tv2_reorder2_3_vec1_para1_unrollv1_config_define, args=(256, 256, 128, 'float32'), kwargs={}, workload=None)
task config space: ConfigSpace (len=648, space_map=
   0 tile_x: Split(policy=factors, product=128, num_outputs=2) len=8
   1 tile_y: Split(policy=factors, product=256, num_outputs=2) len=9
   2 tile_k: Split(policy=factors, product=256, num_outputs=2) len=9
)
flops max: 73423264770.24069
best_iter 135
tuner param: {}
tuner dims: [8, 9, 9]
xs: [421, 478, 85, 476, 414, 70, 430, 361, 449, 462, 343, 550, 415, 115, 17, 65, 257, 557, 157, 388, 183, 50, 319, 480, 617, 193, 622, 341, 84, 408, 362, 509, 328, 95, 153, 200, 31, 311, 205, 224, 119, 473, 340, 595, 524, 434, 396, 467, 97, 517, 418, 389, 425, 403, 129, 439, 185, 239, 45, 316, 330, 438, 279, 176, 395, 392, 323, 320, 387, 394, 460, 384, 381, 325, 248, 321, 380, 324, 251, 385, 393, 322, 376, 318, 317, 313, 312, 250, 386, 453, 382, 464, 402, 400, 315, 249, 309, 378, 459, 379, 244, 466, 256, 446, 252, 456, 457, 329, 401, 258, 332, 253, 314, 377, 454, 179, 452, 172, 465, 169, 241, 237, 390, 531, 461, 432, 190, 163, 458, 451, 530, 331, 243, 523, 532, 468, 242, 245, 259, 307, 522, 529, 444, 308, 443, 236, 235, 450]
ys: [0.0, 0.0, 15847296633.543657, 0.0, 0.0, 1094088723.2774372, 0.0, 12208537206.560812, 26049150700.24532, 31897060724.742386, 3234124713.7382507, 0.0, 0.0, 13404186507.30242, 14205219040.522923, 1187048132.2469356, 26526081457.121174, 0.0, 22041062560.760925, 61239655424.149506, 14668475904.035812, 3820453520.729058, 21872674176.053402, 0.0, 0.0, 5355547326.889437, 0.0, 2882911020.4586616, 19392935084.150177, 15650680050.000935, 12426278756.277126, 9818012429.629803, 30225950347.710155, 8513069069.800484, 21100231411.610825, 10776039565.80384, 5283729836.29687, 16300903596.898623, 1470243743.4165442, 16327555131.673706, 8525787927.757621, 0.0, 4361026024.933196, 31835324478.178368, 36271924590.3057, 9670756957.41394, 62859557886.849014, 64902189555.125725, 22004637741.986256, 18005941444.14871, 0.0, 47150851554.15659, 0.0, 55450872554.204124, 1711698821.6089373, 13119089174.56445, 20352301234.927334, 18687030519.04656, 3457494610.9363985, 53973800025.73672, 41882310649.558136, 6416988334.289539, 1016474465.7776593, 26727228700.694576, 60606950364.85803, 31864347033.351055, 52583263336.049644, 33126438415.669548, 55998718291.05473, 53105900227.90579, 58117001524.179016, 28844673681.314903, 37127591395.94582, 32591040832.977192, 30795183553.59765, 36811514832.36791, 42941428205.784485, 50078252044.65405, 42117828990.30979, 35640090070.95212, 39585710915.01109, 46853261840.929405, 28753712209.50161, 28559880157.97358, 50066296627.872284, 34744068919.814445, 30744394355.87319, 38250002279.8778, 48388371019.8431, 40505108643.16756, 20187245511.864082, 31275102527.775707, 48688885019.443954, 28965187666.17175, 53223830975.191925, 31388617399.438725, 29366735515.490982, 36121982517.331955, 53396613621.89688, 40924031612.84028, 43577184415.58441, 53611606058.669395, 26127037717.631668, 12254909351.214739, 34869717753.66837, 31475772016.059433, 33972979102.54334, 31612179680.43413, 35345754856.10753, 33026015748.031498, 36328474297.34528, 19227137912.856125, 43051619194.25199, 28071505538.2659, 21543499922.954437, 25999094994.576164, 42287684629.732315, 31775030303.0303, 39091327648.07307, 18512177252.06338, 32667191089.995716, 25797607405.357197, 29796497708.947536, 52070813159.52824, 49370890471.42605, 9428474446.729834, 7154768220.393193, 30427683267.438065, 45861943032.092285, 38753617296.4982, 42879967285.18121, 45085499301.30066, 42897509588.340576, 33228789859.378098, 57279672243.08637, 73423264770.24069, 39460946467.21234, 23570788726.853806, 32189593246.35457, 40721398058.252426, 30040853745.88168, 34457210926.26823, 22652322315.834953, 43862002614.37909, 21152906170.411278, 41351710539.28818, 41181188021.60039, 34295208503.679478]
x_train: [[2.321928  1.        2.321928  ... 1.        0.        0.       ]
 [1.5849625 1.        1.5849625 ... 1.        0.        0.       ]
 [2.321928  1.        2.321928  ... 1.        0.        0.       ]
 ...
 [7.011227  1.        7.011227  ... 1.        0.        0.       ]
 [1.5849625 1.        1.5849625 ... 1.        0.        0.       ]
 [4.087463  1.        4.087463  ... 1.        0.        0.       ]]
x_train shape: (128, 252)
y_train: [0.         0.         0.24417199 0.         0.         0.0168575
 0.         0.18810671 0.40136012 0.49146355 0.04983075 0.
 0.         0.20652903 0.21887118 0.0182898  0.40870858 0.
 0.3396043  0.9435684  0.22600895 0.05886479 0.3370098  0.
 0.         0.08251721 0.         0.04441932 0.29880248 0.24114256
 0.19146163 0.15127398 0.46571542 0.13116767 0.32510816 0.16603507
 0.08141066 0.25116107 0.02265322 0.25157171 0.13136364 0.
 0.06719382 0.49051233 0.55887058 0.1490051  0.96852754 1.
 0.33904307 0.27743196 0.         0.72649092 0.         0.85437599
 0.02637351 0.20213631 0.3135842  0.28792604 0.05327239 0.83161755
 0.64531429 0.09887168 0.01566164 0.41180781 0.93381981 0.49095951
 0.81019244 0.51040556 0.86281709 0.81824513 0.89545518 0.44443298
 0.57205453 0.50215626 0.47448605 0.56718448 0.66163297 0.77159573
 0.64894311 0.5491354  0.60992874 0.72190572 0.44303147 0.44004494
 0.77141152 0.53532969 0.4737035  0.58934841 0.74555838 0.62409464
 0.31104106 0.48188055 0.75018864 0.44628984 0.82006218 0.48362956
 0.45247681 0.55656031 0.82272438 0.63054932 0.67142857 0.82603694
 0.40256019 0.1888212  0.53726566 0.48497242 0.52344889 0.48707416
 0.54460035 0.50885827 0.55974189 0.29624791 0.66333077 0.43252016
 0.33193795 0.40058887 0.65156022 0.48958333 0.60231138 0.28523194
 0.50332957 0.39748439 0.4590985  0.80229671 0.76069684 0.14527205
 0.11023924 0.46882368]
y_train shape: (128,)
feas: [[1.5849625 1.        1.5849625 ... 1.        0.        0.       ]
 [7.011227  1.        7.011227  ... 1.        0.        0.       ]
 [5.044394  1.        5.044394  ... 1.        0.        0.       ]
 ...
 [4.087463  1.        4.087463  ... 1.        0.        0.       ]
 [1.        1.        1.        ... 1.        0.        0.       ]
 [3.169925  1.        3.169925  ... 1.        0.        0.       ]]
feas shape: (128, 252)
predict count: 133
space get(index = 64) [('tile_x', [-1, 1]), ('tile_y', [-1, 256]), ('tile_k', [-1, 1])],,None,64
myTuner rets: [[[('tile_x', [-1, 32]), ('tile_y', [-1, 128]), ('tile_k', [-1, 32])],,None,421, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 64])],,None,478, [('tile_x', [-1, 32]), ('tile_y', [-1, 2]), ('tile_k', [-1, 2])],,None,85, [('tile_x', [-1, 16]), ('tile_y', [-1, 32]), ('tile_k', [-1, 64])],,None,476, [('tile_x', [-1, 64]), ('tile_y', [-1, 64]), ('tile_k', [-1, 32])],,None,414, [('tile_x', [-1, 64]), ('tile_y', [-1, 256]), ('tile_k', [-1, 1])],,None,70, [('tile_x', [-1, 64]), ('tile_y', [-1, 256]), ('tile_k', [-1, 32])],,None,430, [('tile_x', [-1, 2]), ('tile_y', [-1, 1]), ('tile_k', [-1, 32])],,None,361], [[('tile_x', [-1, 2]), ('tile_y', [-1, 4]), ('tile_k', [-1, 64])],,None,449, [('tile_x', [-1, 64]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,462, [('tile_x', [-1, 128]), ('tile_y', [-1, 64]), ('tile_k', [-1, 16])],,None,343, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 128])],,None,550, [('tile_x', [-1, 128]), ('tile_y', [-1, 64]), ('tile_k', [-1, 32])],,None,415, [('tile_x', [-1, 8]), ('tile_y', [-1, 32]), ('tile_k', [-1, 2])],,None,115, [('tile_x', [-1, 2]), ('tile_y', [-1, 4]), ('tile_k', [-1, 1])],,None,17, [('tile_x', [-1, 2]), ('tile_y', [-1, 256]), ('tile_k', [-1, 1])],,None,65], [[('tile_x', [-1, 2]), ('tile_y', [-1, 32]), ('tile_k', [-1, 8])],,None,257, [('tile_x', [-1, 32]), ('tile_y', [-1, 64]), ('tile_k', [-1, 128])],,None,557, [('tile_x', [-1, 32]), ('tile_y', [-1, 2]), ('tile_k', [-1, 4])],,None,157, [('tile_x', [-1, 16]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,388, [('tile_x', [-1, 128]), ('tile_y', [-1, 16]), ('tile_k', [-1, 4])],,None,183, [('tile_x', [-1, 4]), ('tile_y', [-1, 64]), ('tile_k', [-1, 1])],,None,50, [('tile_x', [-1, 128]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,319, [('tile_x', [-1, 1]), ('tile_y', [-1, 64]), ('tile_k', [-1, 64])],,None,480], [[('tile_x', [-1, 2]), ('tile_y', [-1, 32]), ('tile_k', [-1, 256])],,None,617, [('tile_x', [-1, 2]), ('tile_y', [-1, 64]), ('tile_k', [-1, 4])],,None,193, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 256])],,None,622, [('tile_x', [-1, 32]), ('tile_y', [-1, 64]), ('tile_k', [-1, 16])],,None,341, [('tile_x', [-1, 16]), ('tile_y', [-1, 2]), ('tile_k', [-1, 2])],,None,84, [('tile_x', [-1, 1]), ('tile_y', [-1, 64]), ('tile_k', [-1, 32])],,None,408, [('tile_x', [-1, 4]), ('tile_y', [-1, 1]), ('tile_k', [-1, 32])],,None,362, [('tile_x', [-1, 32]), ('tile_y', [-1, 1]), ('tile_k', [-1, 128])],,None,509], [[('tile_x', [-1, 1]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,328, [('tile_x', [-1, 128]), ('tile_y', [-1, 4]), ('tile_k', [-1, 2])],,None,95, [('tile_x', [-1, 2]), ('tile_y', [-1, 2]), ('tile_k', [-1, 4])],,None,153, [('tile_x', [-1, 1]), ('tile_y', [-1, 128]), ('tile_k', [-1, 4])],,None,200, [('tile_x', [-1, 128]), ('tile_y', [-1, 8]), ('tile_k', [-1, 1])],,None,31, [('tile_x', [-1, 128]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,311, [('tile_x', [-1, 32]), ('tile_y', [-1, 128]), ('tile_k', [-1, 4])],,None,205, [('tile_x', [-1, 1]), ('tile_y', [-1, 2]), ('tile_k', [-1, 8])],,None,224], [[('tile_x', [-1, 128]), ('tile_y', [-1, 32]), ('tile_k', [-1, 2])],,None,119, [('tile_x', [-1, 2]), ('tile_y', [-1, 32]), ('tile_k', [-1, 64])],,None,473, [('tile_x', [-1, 16]), ('tile_y', [-1, 64]), ('tile_k', [-1, 16])],,None,340, [('tile_x', [-1, 8]), ('tile_y', [-1, 4]), ('tile_k', [-1, 256])],,None,595, [('tile_x', [-1, 16]), ('tile_y', [-1, 4]), ('tile_k', [-1, 128])],,None,524, [('tile_x', [-1, 4]), ('tile_y', [-1, 1]), ('tile_k', [-1, 64])],,None,434, [('tile_x', [-1, 16]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,396, [('tile_x', [-1, 8]), ('tile_y', [-1, 16]), ('tile_k', [-1, 64])],,None,467], [[('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 2])],,None,97, [('tile_x', [-1, 32]), ('tile_y', [-1, 2]), ('tile_k', [-1, 128])],,None,517, [('tile_x', [-1, 4]), ('tile_y', [-1, 128]), ('tile_k', [-1, 32])],,None,418, [('tile_x', [-1, 32]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,389, [('tile_x', [-1, 2]), ('tile_y', [-1, 256]), ('tile_k', [-1, 32])],,None,425, [('tile_x', [-1, 8]), ('tile_y', [-1, 32]), ('tile_k', [-1, 32])],,None,403, [('tile_x', [-1, 2]), ('tile_y', [-1, 128]), ('tile_k', [-1, 2])],,None,129, [('tile_x', [-1, 128]), ('tile_y', [-1, 1]), ('tile_k', [-1, 64])],,None,439], [[('tile_x', [-1, 2]), ('tile_y', [-1, 32]), ('tile_k', [-1, 4])],,None,185, [('tile_x', [-1, 128]), ('tile_y', [-1, 4]), ('tile_k', [-1, 8])],,None,239, [('tile_x', [-1, 32]), ('tile_y', [-1, 32]), ('tile_k', [-1, 1])],,None,45, [('tile_x', [-1, 16]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,316, [('tile_x', [-1, 4]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,330, [('tile_x', [-1, 64]), ('tile_y', [-1, 1]), ('tile_k', [-1, 64])],,None,438, [('tile_x', [-1, 128]), ('tile_y', [-1, 128]), ('tile_k', [-1, 8])],,None,279, [('tile_x', [-1, 1]), ('tile_y', [-1, 16]), ('tile_k', [-1, 4])],,None,176], [[('tile_x', [-1, 8]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,395, [('tile_x', [-1, 1]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,392, [('tile_x', [-1, 8]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,323, [('tile_x', [-1, 1]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,320, [('tile_x', [-1, 8]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,387, [('tile_x', [-1, 4]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,394, [('tile_x', [-1, 16]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,460, [('tile_x', [-1, 1]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,384], [[('tile_x', [-1, 32]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,381, [('tile_x', [-1, 32]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,325, [('tile_x', [-1, 1]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,248, [('tile_x', [-1, 2]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,321, [('tile_x', [-1, 16]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,380, [('tile_x', [-1, 16]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,324, [('tile_x', [-1, 8]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,251, [('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,385], [[('tile_x', [-1, 2]), ('tile_y', [-1, 16]), ('tile_k', [-1, 32])],,None,393, [('tile_x', [-1, 4]), ('tile_y', [-1, 16]), ('tile_k', [-1, 16])],,None,322, [('tile_x', [-1, 1]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,376, [('tile_x', [-1, 64]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,318, [('tile_x', [-1, 32]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,317, [('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,313, [('tile_x', [-1, 1]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,312, [('tile_x', [-1, 4]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,250], [[('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,386, [('tile_x', [-1, 32]), ('tile_y', [-1, 4]), ('tile_k', [-1, 64])],,None,453, [('tile_x', [-1, 64]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,382, [('tile_x', [-1, 1]), ('tile_y', [-1, 16]), ('tile_k', [-1, 64])],,None,464, [('tile_x', [-1, 4]), ('tile_y', [-1, 32]), ('tile_k', [-1, 32])],,None,402, [('tile_x', [-1, 1]), ('tile_y', [-1, 32]), ('tile_k', [-1, 32])],,None,400, [('tile_x', [-1, 8]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,315, [('tile_x', [-1, 2]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,249], [[('tile_x', [-1, 32]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,309, [('tile_x', [-1, 4]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,378, [('tile_x', [-1, 8]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,459, [('tile_x', [-1, 8]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,379, [('tile_x', [-1, 16]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,244, [('tile_x', [-1, 4]), ('tile_y', [-1, 16]), ('tile_k', [-1, 64])],,None,466, [('tile_x', [-1, 1]), ('tile_y', [-1, 32]), ('tile_k', [-1, 8])],,None,256, [('tile_x', [-1, 64]), ('tile_y', [-1, 2]), ('tile_k', [-1, 64])],,None,446], [[('tile_x', [-1, 16]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,252, [('tile_x', [-1, 1]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,456, [('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,457, [('tile_x', [-1, 2]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,329, [('tile_x', [-1, 2]), ('tile_y', [-1, 32]), ('tile_k', [-1, 32])],,None,401, [('tile_x', [-1, 4]), ('tile_y', [-1, 32]), ('tile_k', [-1, 8])],,None,258, [('tile_x', [-1, 16]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,332, [('tile_x', [-1, 32]), ('tile_y', [-1, 16]), ('tile_k', [-1, 8])],,None,253], [[('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 16])],,None,314, [('tile_x', [-1, 2]), ('tile_y', [-1, 4]), ('tile_k', [-1, 32])],,None,377, [('tile_x', [-1, 64]), ('tile_y', [-1, 4]), ('tile_k', [-1, 64])],,None,454, [('tile_x', [-1, 8]), ('tile_y', [-1, 16]), ('tile_k', [-1, 4])],,None,179, [('tile_x', [-1, 16]), ('tile_y', [-1, 4]), ('tile_k', [-1, 64])],,None,452, [('tile_x', [-1, 16]), ('tile_y', [-1, 8]), ('tile_k', [-1, 4])],,None,172, [('tile_x', [-1, 2]), ('tile_y', [-1, 16]), ('tile_k', [-1, 64])],,None,465, [('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 4])],,None,169], [[('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,241, [('tile_x', [-1, 32]), ('tile_y', [-1, 4]), ('tile_k', [-1, 8])],,None,237, [('tile_x', [-1, 64]), ('tile_y', [-1, 8]), ('tile_k', [-1, 32])],,None,390, [('tile_x', [-1, 8]), ('tile_y', [-1, 8]), ('tile_k', [-1, 128])],,None,531, [('tile_x', [-1, 32]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,461, [('tile_x', [-1, 1]), ('tile_y', [-1, 1]), ('tile_k', [-1, 64])],,None,432, [('tile_x', [-1, 64]), ('tile_y', [-1, 32]), ('tile_k', [-1, 4])],,None,190, [('tile_x', [-1, 8]), ('tile_y', [-1, 4]), ('tile_k', [-1, 4])],,None,163], [[('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 64])],,None,458, [('tile_x', [-1, 8]), ('tile_y', [-1, 4]), ('tile_k', [-1, 64])],,None,451, [('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 128])],,None,530, [('tile_x', [-1, 8]), ('tile_y', [-1, 32]), ('tile_k', [-1, 16])],,None,331, [('tile_x', [-1, 8]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,243, [('tile_x', [-1, 8]), ('tile_y', [-1, 4]), ('tile_k', [-1, 128])],,None,523, [('tile_x', [-1, 16]), ('tile_y', [-1, 8]), ('tile_k', [-1, 128])],,None,532, [('tile_x', [-1, 16]), ('tile_y', [-1, 16]), ('tile_k', [-1, 64])],,None,468], [[('tile_x', [-1, 4]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,242, [('tile_x', [-1, 32]), ('tile_y', [-1, 8]), ('tile_k', [-1, 8])],,None,245, [('tile_x', [-1, 8]), ('tile_y', [-1, 32]), ('tile_k', [-1, 8])],,None,259, [('tile_x', [-1, 8]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,307, [('tile_x', [-1, 4]), ('tile_y', [-1, 4]), ('tile_k', [-1, 128])],,None,522, [('tile_x', [-1, 2]), ('tile_y', [-1, 8]), ('tile_k', [-1, 128])],,None,529, [('tile_x', [-1, 16]), ('tile_y', [-1, 2]), ('tile_k', [-1, 64])],,None,444, [('tile_x', [-1, 16]), ('tile_y', [-1, 4]), ('tile_k', [-1, 16])],,None,308], [[('tile_x', [-1, 8]), ('tile_y', [-1, 2]), ('tile_k', [-1, 64])],,None,443, [('tile_x', [-1, 16]), ('tile_y', [-1, 4]), ('tile_k', [-1, 8])],,None,236, [('tile_x', [-1, 8]), ('tile_y', [-1, 4]), ('tile_k', [-1, 8])],,None,235, [('tile_x', [-1, 4]), ('tile_y', [-1, 4]), ('tile_k', [-1, 64])],,None,450]]
predict count: 133
fit count: 2
find maximums count: 2
